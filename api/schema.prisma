generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trade {
  transactionHash                 String   @id @unique
  timestamp                       Int
  blockNumber                     Int
  transactionIndex                Int
  traderAddress                   String
  subjectAddress                  String
  isBuy                           Boolean
  shareAmount                     Int
  ethAmount                       Decimal  @db.Decimal(65, 0)
  protocolEthAmount               Decimal  @db.Decimal(65, 0)
  subjectEthAmount                Decimal  @db.Decimal(65, 0)
  supply                          Int
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime

  @@unique([subjectAddress, timestamp(sort: Desc), transactionIndex(sort: Desc)])
}

model WeeklyStatsBySubject {
  timestamp                       Int 
  traderAddress                   String 
  subjectAddress                  String
  realized                        Decimal  @db.Decimal(65, 0)
  potential                       Decimal  @db.Decimal(65, 0)
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime
  
  @@id([timestamp, traderAddress, subjectAddress])
}

model WeeklyStats {
  timestamp                       Int
  traderAddress                   String
  partKey                         String
  realized                        Decimal  @db.Decimal(65, 0)
  potential                       Decimal  @db.Decimal(65, 0)
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime

  @@id([timestamp, traderAddress, partKey])
}

model DailyStatsBySubject {
  timestamp                       Int
  traderAddress                   String
  subjectAddress                  String
  realized                        Decimal  @db.Decimal(65, 0)
  potential                       Decimal  @db.Decimal(65, 0)
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime

  @@id([timestamp, traderAddress, subjectAddress])
}

model DailyStats {
  timestamp                       Int
  traderAddress                   String
  partKey                         String
  realized                        Decimal  @db.Decimal(65, 0)
  potential                       Decimal  @db.Decimal(65, 0)
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime

  @@id([timestamp, traderAddress, partKey])
}

model User {
  address                          String   @id @unique
  twitterUsername                  String?
  twitterName                      String?
  twitterPfpUrl                    String?
  twitterUserId                    String?
  createdAt                        DateTime @default(now())
  updatedAt                        DateTime
}
